---

- hosts: localhost
  become: true
  vars_files:
    - vars.yml

  tasks:

  - name: Change Elasticsearch's minimum memory usage to 512MB
    lineinfile:
      path: /etc/elasticsearch/jvm.options
      regexp: "^-Xms"
      line: "-Xms512m"
      state: present

  - name: Change Elasticsearch's maximum memory usage to 512MB
    lineinfile:
      path: /etc/elasticsearch/jvm.options
      regexp: "^-Xmx"
      line: "-Xmx512m"
      state: present

  - name: Do not swap
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regexp: "bootstrap.memory_lock"
      line: "bootstrap.memory_lock: true"
      state: present

  - name: We only have a single node, set minimum master nodes accordingly
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regexp: "discovery.zen.minimum_master_nodes"
      line: "discovery.zen.minimum_master_nodes: 1"
      state: present

  - name: Require explicit names when deleting indices
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regexp: "action.destructive_requires_name"
      line: "action.destructive_requires_name: true"
      state: present

  - name: Disable watermarks, since disk space might be tight on the 10GB base box
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regexp: "cluster.routing.allocation.disk.threshold_enabled"
      line:  "cluster.routing.allocation.disk.threshold_enabled: false"
      state: present

  - name: Enable security for the Elastic Stack
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      regexp: "xpack.security.enabled"
      line:  "xpack.security.enabled: true"
      state: present

  - name: Set the right ulimits
    shell: ulimit -n 65536
  - shell: ulimit -l unlimited

  - name: Start Elasticsearch
    service: name=elasticsearch state=restarted

  - name: Wait for Elasticsearch to become available
    wait_for:
      port: 9200
      delay: 5

  - name: Create reserved user passwords
    expect:
      command: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive
      responses:
        'Please confirm that you would like to continue \[y\/N\]' : "y\n"
        'Enter password for \[elastic\]:' : "{{ elastic_user_password }}\n"
        'Reenter password for \[elastic\]:' : "{{ elastic_user_password }}\n"
        'Enter password for \[apm_system\]:' : "{{ apm_system_user_password }}\n"
        'Reenter password for \[apm_system\]:' : "{{ apm_system_user_password }}\n"
        'Enter password for \[kibana\]:' : "{{ kibana_user_password }}\n"
        'Reenter password for \[kibana\]:' : "{{ kibana_user_password }}\n"
        'Enter password for \[logstash_system\]:' : "{{ logstash_system_user_password }}\n"
        'Reenter password for \[logstash_system\]:' : "{{ logstash_system_user_password }}\n"
        'Enter password for \[beats_system\]:' : "{{ beats_system_user_password }}\n"
        'Reenter password for \[beats_system\]:' : "{{ beats_system_user_password }}\n"
        'Enter password for \[remote_monitoring_user\]:' : "{{ remote_monitoring_user_password }}\n"
        'Reenter password for \[remote_monitoring_user\]:' : "{{ remote_monitoring_user_password }}\n"

  - name: Create Logstash Writer role
    uri:
      url: http://127.0.0.1:9200/_xpack/security/role/logstash_writer
      user: elastic
      password: "{{ elastic_user_password }}"
      method: POST
      body: '{"cluster": ["manage_index_templates", "monitor", "manage_ilm"], "indices": [{"names": [ "logstash-*" ], "privileges": ["write","delete","create_index","manage","manage_ilm"]  }]}'
      force_basic_auth: yes
      status_code: 200
      body_format: json
      validate_certs: no

  - name: Create logstash_internal user
    uri:
      url: http://127.0.0.1:9200/_xpack/security/user/logstash_internal
      user: elastic
      password: "{{ elastic_user_password }}"
      method: POST
      body: '{"password" : "{{ logstash_internal_password }}","roles" : [ "logstash_writer"],"full_name" : "Internal Logstash User"}'
      force_basic_auth: yes
      status_code: 200
      body_format: json
      validate_certs: no
